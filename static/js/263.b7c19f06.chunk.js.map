{"version":3,"file":"static/js/263.b7c19f06.chunk.js","mappings":"8PAIeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,yFAEUC,EAFV,UAEmBC,EAAAA,GAFnB,iCAEqDC,EAAAA,GAFrD,kBAEsEH,EAFtE,mBAGUI,EAAWC,EAAAA,EAAAA,IAAUJ,GAH/B,kBAIWG,GAJX,gCAMIE,QAAQC,MAAM,KAAMC,SANxB,+EAUA,M,SAV4B,GAAbT,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kBCcf,EAhB+B,SAAC,GAAyB,IAAvBU,EAAsB,EAAtBA,gBAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAgBG,KAAI,SAAAC,GAAK,OACxB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,kBAFFL,EAAME,GADS,KAS/B,ECmCD,EA7Ce,WAAO,IAAD,EACnB,GAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,MAAvD,eAAOV,EAAP,KAAwBa,EAAxB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAY,CACd,IAAMG,EAAyB,mCAAG,sGAGtB9B,EAAa2B,GAHS,gBAEtBI,EAFsB,EAE9BC,KAAQD,QAEVR,EAAmBQ,GAJa,2CAAH,qDAM/BD,GACD,CACF,GAAE,CAACH,IAcJ,OACE,iCACE,kBAAMM,SATW,SAAAC,GACnBA,EAAEC,iBAGFT,EAFoC,KAAfL,EAAoB,CAAEpB,MAAOoB,GAAe,CAAC,EAGnE,EAIiCe,aAAa,MAA3C,WACE,kBAAOC,KAAK,OAAOC,MAAOjB,EAAYkB,SAfvB,SAAAL,GACnB,IAAMM,EAAaN,EAAEO,OAAOH,MAAMI,cAClCpB,EAAckB,EACf,KAaK,mBAAQH,KAAK,SAAb,SAAsB,cAGvB3B,IACC,SAAC,EAAD,CAAwBA,gBAAiBA,MAIhD,C,uGCjDM,IAAMN,EAAU,mCACVD,EAAY,+BACZwC,EAAmB,iC","sources":["services/fetchByQuery.js","components/MoviesSearchCollection.jsx","pages/Movies.jsx","services/constants.js"],"sourcesContent":["import axios from 'axios';\n\nimport { BASIC_URL, API_KEY } from './constants';\n\nasync function fetchByQuery(query) {\n  try {\n    const uri = `${BASIC_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`;\n    const response = axios.get(uri);\n    return response;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport default fetchByQuery;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesSearchCollection = ({ movieCollection }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movieCollection.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesSearchCollection;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport fetchByQuery from 'services/fetchByQuery';\nimport MoviesSearchCollection from 'components/MoviesSearchCollection';\n\nconst Movies = () => {\n  const [inputQuery, setInputQuery] = useState('');\n  const [movieCollection, setMovieCollection] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryValue) {\n      const getMovieCollectionByQuery = async () => {\n        const {\n          data: { results },\n        } = await fetchByQuery(queryValue);\n        setMovieCollection(results);\n      };\n      getMovieCollectionByQuery();\n    }\n  }, [queryValue]);\n\n  const handleChange = e => {\n    const inputValue = e.target.value.toLowerCase();\n    setInputQuery(inputValue);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const requestQuery = inputQuery !== '' ? { query: inputQuery } : {};\n\n    setSearchParams(requestQuery);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input type=\"text\" value={inputQuery} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movieCollection && (\n        <MoviesSearchCollection movieCollection={movieCollection} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = 'b881a81ae0034e0912ae6be6c107d550';\nexport const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const BASIC_POSTER_URL = 'https://image.tmdb.org/t/p/w300';\n"],"names":["fetchByQuery","query","uri","BASIC_URL","API_KEY","response","axios","console","error","message","movieCollection","location","useLocation","map","movie","to","id","state","from","original_title","useState","inputQuery","setInputQuery","setMovieCollection","useSearchParams","searchParams","setSearchParams","queryValue","get","useEffect","getMovieCollectionByQuery","results","data","onSubmit","e","preventDefault","autoComplete","type","value","onChange","inputValue","target","toLowerCase","BASIC_POSTER_URL"],"sourceRoot":""}