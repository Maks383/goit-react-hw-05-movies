{"version":3,"file":"static/js/518.e0e49b15.chunk.js","mappings":"gRAIeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,yFAEUC,EAFV,UAEmBC,EAAAA,GAFnB,kBAEsCF,EAFtC,oBAEyDG,EAAAA,IAFzD,SAG2BC,EAAAA,EAAAA,IAAUH,GAHrC,cAGUI,EAHV,yBAIWA,GAJX,gCAMIC,QAAQC,IAAI,KAAMC,SANtB,gFAUA,I,MAAA,E,SAViC,GAAlBT,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,2BCATU,EAAeC,EAAAA,GAAAA,IAAH,yCAIZC,EAAeD,EAAAA,GAAAA,QAAH,gEAKZE,EAAYF,EAAAA,GAAAA,IAAH,yFA+Cf,EAxCc,SAAC,GAER,IAAD,IADJG,YAAeC,EACX,EADWA,MAAOC,EAClB,EADkBA,UAAWC,EAC7B,EAD6BA,SAAUC,EACvC,EADuCA,OAAQC,EAC/C,EAD+CA,WAE7CC,EAAsBC,KAAKC,MAAkB,GAAZN,GAEvC,OACE,iCACE,UAACJ,EAAD,YACE,0BACE,SAACF,EAAD,CAAca,IAAG,UAAKJ,QAExB,4BACE,wBAAKJ,KACL,yBAAG,eAAaK,EAAoB,QACpC,wBAAI,cACJ,uBAAIH,KACJ,wBAAI,YACJ,uBAAIC,WAGR,UAACL,EAAD,YACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAASW,GAAG,OAAZ,SAAmB,YAGrB,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,SAAsB,qBAK5B,UAAC,EAAAC,SAAD,CAAUC,UAAU,yBAAK,uBAAzB,WACE,SAAC,KAAD,IAAW,SAIlB,ECbD,EArCqB,WAAO,IAAD,IACzB,GAAuCC,EAAAA,EAAAA,UAAS,MAAhD,eAAOb,EAAP,KAAoBc,EAApB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAErCC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,wGACCpC,EAAkBiC,GADnB,gBACdI,EADc,EACdA,KAEFC,EAAmB,CACvBvB,MAAOsB,EAAKtB,MACZC,UAAWqB,EAAKE,aAChBtB,SAAUoB,EAAKG,SACftB,OAAQmB,EAAKnB,OAAOuB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAClDzB,WAAW,GAAD,OAAK0B,EAAAA,IAAL,OAAwBR,EAAKS,cAGzClB,EAAgBU,GAXM,2CAAH,qDAcrBF,GACD,GAAE,CAACH,IAGFnB,IACE,iCACE,UAAC,KAAD,CAAMU,GAAIK,EAAV,WACE,SAAC,MAAD,IAAe,eAEjB,SAAC,EAAD,CAAOf,YAAaA,MAI3B,C,uGC3CM,IAAMV,EAAU,mCACVD,EAAY,+BACZ0C,EAAmB,iC","sources":["services/fetchMoviesByID.js","components/Movie.jsx","pages/MovieDetails.jsx","services/constants.js"],"sourcesContent":["import axios from 'axios';\n\nimport { API_KEY, BASIC_URL } from './constants';\n\nasync function fetchMovieDetails(movieID) {\n  try {\n    const uri = `${BASIC_URL}/movie/${movieID}?api_key=${API_KEY}`;\n    const response = await axios.get(uri);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport default fetchMovieDetails;\n","import { Suspense } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledPoster = styled.img`\n  width: 150px;\n`;\n\nconst MovieSection = styled.section`\n  margin: 15px auto;\n  display: flex;\n`;\n\nconst ExtraInfo = styled.div`\n  border-top: 2px solid #ccc;\n  border-bottom: 2px solid #ccc;\n`;\n\n// title, userScore, overView, genres, posterPath;\n\nconst Movie = ({\n  movieDetail: { title, userScore, overView, genres, posterPath },\n}) => {\n  const userScoreCalculated = Math.round(userScore * 10);\n\n  return (\n    <>\n      <MovieSection>\n        <div>\n          <StyledPoster src={`${posterPath}`} />\n        </div>\n        <div>\n          <h1>{title}</h1>\n          <p>User Score: {userScoreCalculated}%</p>\n          <h3>Overview</h3>\n          <p>{overView}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </MovieSection>\n      <ExtraInfo>\n        <h3>Additional Information</h3>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </ExtraInfo>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />{' '}\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\n\nimport fetchMovieDetails from 'services/fetchMoviesByID';\nimport Movie from 'components/Movie';\nimport { BASIC_POSTER_URL } from 'services/constants';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      const { data } = await fetchMovieDetails(movieId);\n\n      const tempMovieDetails = {\n        title: data.title,\n        userScore: data.vote_average,\n        overView: data.overview,\n        genres: data.genres.map(genre => genre.name).join(', '),\n        posterPath: `${BASIC_POSTER_URL}${data.poster_path}`,\n      };\n\n      setMovieDetails(tempMovieDetails);\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    movieDetail && (\n      <>\n        <Link to={backLinkHref}>\n          <FiArrowLeft /> Go Back\n        </Link>\n        <Movie movieDetail={movieDetail} />\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n","export const API_KEY = 'b881a81ae0034e0912ae6be6c107d550';\nexport const BASIC_URL = 'https://api.themoviedb.org/3';\nexport const BASIC_POSTER_URL = 'https://image.tmdb.org/t/p/w300';\n"],"names":["fetchMovieDetails","movieID","uri","BASIC_URL","API_KEY","axios","response","console","log","message","StyledPoster","styled","MovieSection","ExtraInfo","movieDetail","title","userScore","overView","genres","posterPath","userScoreCalculated","Math","round","src","to","Suspense","fallback","useState","setMovieDetails","backLinkHref","useLocation","state","from","movieId","useParams","useEffect","getMovieDetails","data","tempMovieDetails","vote_average","overview","map","genre","name","join","BASIC_POSTER_URL","poster_path"],"sourceRoot":""}